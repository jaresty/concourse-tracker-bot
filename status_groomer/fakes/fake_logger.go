// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/jaresty/concourse-tracker-bot/status_groomer"
)

type FakeLogger struct {
	PrintlnStub        func(...interface{})
	printlnMutex       sync.RWMutex
	printlnArgsForCall []struct {
		arg1 []interface{}
	}
	PrintfStub        func(string, ...interface{})
	printfMutex       sync.RWMutex
	printfArgsForCall []struct {
		arg1 string
		arg2 []interface{}
	}
}

func (fake *FakeLogger) Println(arg1 ...interface{}) {
	fake.printlnMutex.Lock()
	fake.printlnArgsForCall = append(fake.printlnArgsForCall, struct {
		arg1 []interface{}
	}{arg1})
	fake.printlnMutex.Unlock()
	if fake.PrintlnStub != nil {
		fake.PrintlnStub(arg1...)
	}
}

func (fake *FakeLogger) PrintlnCallCount() int {
	fake.printlnMutex.RLock()
	defer fake.printlnMutex.RUnlock()
	return len(fake.printlnArgsForCall)
}

func (fake *FakeLogger) PrintlnArgsForCall(i int) []interface{} {
	fake.printlnMutex.RLock()
	defer fake.printlnMutex.RUnlock()
	return fake.printlnArgsForCall[i].arg1
}

func (fake *FakeLogger) Printf(arg1 string, arg2 ...interface{}) {
	fake.printfMutex.Lock()
	fake.printfArgsForCall = append(fake.printfArgsForCall, struct {
		arg1 string
		arg2 []interface{}
	}{arg1, arg2})
	fake.printfMutex.Unlock()
	if fake.PrintfStub != nil {
		fake.PrintfStub(arg1, arg2...)
	}
}

func (fake *FakeLogger) PrintfCallCount() int {
	fake.printfMutex.RLock()
	defer fake.printfMutex.RUnlock()
	return len(fake.printfArgsForCall)
}

func (fake *FakeLogger) PrintfArgsForCall(i int) (string, []interface{}) {
	fake.printfMutex.RLock()
	defer fake.printfMutex.RUnlock()
	return fake.printfArgsForCall[i].arg1, fake.printfArgsForCall[i].arg2
}

var _ status_groomer.Logger = new(FakeLogger)
